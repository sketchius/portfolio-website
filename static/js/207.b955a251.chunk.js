"use strict";(self.webpackChunkportfolio_website=self.webpackChunkportfolio_website||[]).push([[207],{442:function(e,t,a){a.r(t),a.d(t,{data:function(){return h}});var i=a.p+"static/media/main-image.9f9a50fa740e30f92f67.jpg",s=a.p+"static/media/sketch.5f6cdcca81016f4e1b01.png",o=a.p+"static/media/step1.d32c0f8d3fc3a686f729.png",n=a.p+"static/media/step2.8ec924200af090dfad92.png",r=a.p+"static/media/step3.4ce773f0560c97c95df5.png",l=a(184),c=function(){return(0,l.jsxs)("article",{children:[(0,l.jsx)("p",{children:"Wireframes are an excellent tool for web design. They allow you to brainstorm layout ideas, help communicate designs, and act as a blueprint for your code. In this article, I'm going to focus on that last one. Let's say you're making a forum post component and have sketched out a wireframe design like the image below."}),(0,l.jsx)("img",{src:s,alt:"sketch design for forum post component",className:"large-image"}),(0,l.jsx)("p",{children:"At this point, you could jump in and start coding. Do you ever find yourself getting mixed up about which elements belong to which containers? How about what classname you used for a particular element? I know I do from time to time. A simple wireframe sketch doesn't help so much with these issues. Instead, I find myself scrolling through a sea of HTML tags and selectors trying to keep everything straight."}),(0,l.jsxs)("h2",{children:["Introducting: the ",(0,l.jsx)("strong",{children:"deconstructed wireframe"}),"."]}),(0,l.jsxs)("p",{children:["What is a deconstructed wireframe? It's basically an"," ",(0,l.jsx)("a",{href:"https://www.google.com/search?q=exploded+view+illustration&tbm=isch",children:"exploded view illustration"})," ","of your component, so you can see the containers individually. All you need is a pencil and paper!"," ",(0,l.jsx)("small",{children:"Note: I've used Illustrator for these Illustrations, but that was just to make them look pretty."})]}),(0,l.jsx)("img",{src:o,alt:"step 1 illutration",className:"large-image"}),(0,l.jsxs)("p",{children:["Start by drawing the outermost container. Label it with what you expect to use as a semantic tag or class name. Next, draw in all of its ",(0,l.jsx)("em",{children:"direct"})," children. For this container, there are two direct children: the ",(0,l.jsx)("code",{children:"user"})," section on left and the ",(0,l.jsx)("code",{children:"post"})," section on the right. Draw a thin line to show the seperation between child containers."]}),(0,l.jsx)("img",{src:n,alt:"step 2 illutration",className:"large-image"}),(0,l.jsxs)("p",{children:["Next, redraw each of the child containers below the original, again providing a label at the top and drawing in their direct children. Draw arrows from the first container to the redrawn children. Note that some of the children of our ",(0,l.jsx)("code",{children:"post"})," section don\u2019t have any of their own children. For these we\u2019ll give them a clear and concise label."]}),(0,l.jsx)("p",{children:"Continue this process until we\u2019ve iterated through all of the layers, making sure to draw each step below the previous. Out example just needs one more step:"}),(0,l.jsx)("img",{src:r,alt:"step 3 illutration",className:"large-image"}),(0,l.jsx)("p",{children:"That\u2019s it! Now we have a simple reference that shows us at a glance:"}),(0,l.jsxs)("ul",{children:[(0,l.jsx)("li",{children:"The hierarchy of elements from top to bottom."}),(0,l.jsx)("li",{children:"The class name or semantic tag for each container."}),(0,l.jsx)("li",{children:"A label for each childless component."})]}),(0,l.jsx)("h2",{children:"Other techniques"})]})},h={title:"Explode your wireframe",mainImage:i,mainImageAlt:"exploded view illustration",caption:"A technique to help streamline your layout and styling workflow.",subTitle:"Deconstructing a design to make a blueprint",author:"Bryce Huhtala",authorLink:"/",publishDate:"11/5/2022",body:(0,l.jsx)(c,{})}}}]);
//# sourceMappingURL=207.b955a251.chunk.js.map